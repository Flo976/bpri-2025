import 'animate.css';

export default class AppAnimateCss{constructor(){this.animationClasses=[{selector:".rotateIn",inClass:"animate__rotateIn",outClass:"animate__rotateOut"},{selector:".zoomIn",inClass:"animate__zoomIn",outClass:"animate__zoomOut"},{selector:".zoomInDown",inClass:"animate__zoomInDown",outClass:"animate__zoomOut"},{selector:".zoomInLeft",inClass:"animate__zoomInLeft",outClass:"animate__zoomOut"},{selector:".zoomInRight",inClass:"animate__zoomInRight",outClass:"animate__zoomOut"},{selector:".zoomInUp",inClass:"animate__zoomInUp",outClass:"animate__zoomOut"},{selector:".flipInX",inClass:"animate__flipInX",outClass:"animate__flipOutX"},{selector:".flipInY",inClass:"animate__flipInY",outClass:"animate__flipOutY"},{selector:".bounceIn",inClass:"animate__bounceIn",outClass:"animate__bounceOut"},{selector:".fadeIn",inClass:"animate__fadeIn",outClass:"animate__fadeOut"},{selector:".fadeInDown",inClass:"animate__fadeInDown",outClass:"animate__fadeOut"},{selector:".fadeInUp",inClass:"animate__fadeInUp",outClass:"animate__fadeOut"},{selector:".fadeInRight",inClass:"animate__fadeInRight",outClass:"animate__fadeOutRight"},{selector:".fadeInLeft",inClass:"animate__fadeInLeft",outClass:"animate__fadeOutLeft"}],this.windowHeight=window.innerHeight,this.lastScrollY=window.scrollY,this.init()}init(){this.checkAnimations(),this.handleScroll(),window.addEventListener("resize",()=>this.windowHeight=window.innerHeight)}handleScroll(){let t=!1;window.addEventListener("scroll",()=>{t||(window.requestAnimationFrame(()=>{this.checkAnimations(),this.lastScrollY=window.scrollY,t=!1}),t=!0)})}findParentWithClass(t,a){for(;t;){if(t.classList&&t.classList.contains(a))return t;t=t.parentElement}return null}checkAnimations(s={}){this.animationClasses.forEach(({selector:t,inClass:a,outClass:e})=>{document.querySelectorAll(t).forEach(t=>this.toggleAnimation(t,a,e,s))})}toggleAnimation(t,a,e,s={}){var n,i;t.hasAttribute("data-swiperIndex")?({swiperActiveIndex:s=0}=s,parseInt(t.getAttribute("data-swiperIndex"))<=(s=parseInt(s))?(t.classList.remove(e),t.classList.add(a,"animate__animated")):(t.classList.remove(a),t.classList.add(e,"animate__animated"))):({top:s,height:n}=t.getBoundingClientRect(),i=window.scrollY<this.lastScrollY,s+n/3<this.windowHeight?(t.classList.remove(e),t.classList.add(a,"animate__animated")):i&&(t.classList.remove(a),t.classList.add(e,"animate__animated")))}}

// Initialiser quand le DOM est chargÃ©
window.addEventListener('load', () => {
    window.appAnimateCss = new AppAnimateCss();
});